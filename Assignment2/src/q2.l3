(define make-ok
  (lambda (val)
    (cons "ok" val)
  )
 )
 
(define make-error
  (lambda (msg)
    (cons "Failure" msg)
  )
 )

(define ok?
  (lambda (res)
    (if(pair? res)
         (eq? (car res) '"ok")
         #f)
  )
 )

(define error?
  (lambda (res)
   (if(pair? res)
         (eq? (car res) '"Failure")
         #f)
 )
)

(define result?
  (lambda (res)
    (if(ok? res) #t 
       (if(error? res) #t #f))
      
  )
 )

(define result->val
  (lambda (res)
    (if(result? res)
      (cdr res)
      (make-error "Error: key not found")
    )
  )
)

(define bind
  (lambda (f)
    (lambda (res)
       (if(ok? res) 
           (f (cdr res))
           (make-error (cdr res))))
  )
)

(define make-dict
  (lambda ()
    (list)
  )
)

(define dict?
  (lambda (e)
    (if(eq? e '()) #t 
      (if(pair? e)
        (if(pair? (car e))
          (dict? (cdr e))#f)#f))
  )
)

(define get
  (lambda (dict k)
    (if(dict? dict)
       (if(eq? dict '())
        (make-error "Key not found")
        (if(eq?(car(car dict)) k)
          (make-ok (cdr( car dict)))
          (get (cdr dict) k)))
        (make-error "Error: not a dictionary"))
  )
)

(define put
  (lambda (dict k v)
    (if(eq? dict '())
      (make-ok (cons (cons k v) '()))
      (if(dict? dict)
        (if(ok?(get dict k))
          (update dict k v)
          (make-ok (cons (car dict) (result->val (put (cdr dict) k v))))
        )
        (make-error "Error: not a dictionary")
      )
    )
  )
)
(define update
  (lambda (dict k v)
    (if(eq? dict '())
      (make-ok '())
      (if(eq? (car(car dict)) k)
        (make-ok (cons (cons k v) (result->val (update (cdr dict) k v))))
        (make-ok (cons (car dict) (result->val (update (cdr dict) k v))))
      )
    )
  )
)
(define map-dict
  (lambda (dict f)
    (if(dict? dict)
      (if(eq? dict '())
        (make-ok '())
        (make-ok (cons (cons (car (car dict)) (f (cdr (car dict)))) (result->val (map-dict (cdr dict) f))))
      )
      (make-error "Error: not a dictionary")
    )
  )
)

(define filter-dict
  (lambda (dict pred)
     (if(dict? dict)
      (if(eq? dict '())
        (make-ok '())
        (if(pred (car (car dict)) (cdr (car dict)))
          (make-ok (cons (car dict) (result->val (filter-dict (cdr dict) pred))))
          (make-ok (result->val (filter-dict (cdr dict) pred)))
        )
      )
      (make-error "Error: not a dictionary")
    )
  )
)
